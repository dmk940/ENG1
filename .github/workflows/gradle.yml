# Build a Java project, with Gradle
# see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build Java project using Gradle

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 1.8 environment
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build using Gradle
      run: ./gradlew desktop:dist
    
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        path: desktop/build/libs
      
    - name: Push .jar as a release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: Latest commit ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
      
    - name: Upload .jar file
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: desktop/build/libs/game-1.0.jar
        asset_content_type: application/java-archive
        asset_name: game.jar
